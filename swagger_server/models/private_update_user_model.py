# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PrivateUpdateUserModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, first_name: str=None, last_name: str=None, other_name: str=None, email: str=None, phone: str=None, birthday: date=None, city: int=None, additional_info: str=None, is_admin: bool=None):  # noqa: E501
        """PrivateUpdateUserModel - a model defined in Swagger

        :param id: The id of this PrivateUpdateUserModel.  # noqa: E501
        :type id: int
        :param first_name: The first_name of this PrivateUpdateUserModel.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this PrivateUpdateUserModel.  # noqa: E501
        :type last_name: str
        :param other_name: The other_name of this PrivateUpdateUserModel.  # noqa: E501
        :type other_name: str
        :param email: The email of this PrivateUpdateUserModel.  # noqa: E501
        :type email: str
        :param phone: The phone of this PrivateUpdateUserModel.  # noqa: E501
        :type phone: str
        :param birthday: The birthday of this PrivateUpdateUserModel.  # noqa: E501
        :type birthday: date
        :param city: The city of this PrivateUpdateUserModel.  # noqa: E501
        :type city: int
        :param additional_info: The additional_info of this PrivateUpdateUserModel.  # noqa: E501
        :type additional_info: str
        :param is_admin: The is_admin of this PrivateUpdateUserModel.  # noqa: E501
        :type is_admin: bool
        """
        self.swagger_types = {
            'id': int,
            'first_name': str,
            'last_name': str,
            'other_name': str,
            'email': str,
            'phone': str,
            'birthday': date,
            'city': int,
            'additional_info': str,
            'is_admin': bool
        }

        self.attribute_map = {
            'id': 'id',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'other_name': 'other_name',
            'email': 'email',
            'phone': 'phone',
            'birthday': 'birthday',
            'city': 'city',
            'additional_info': 'additional_info',
            'is_admin': 'is_admin'
        }
        self._id = id
        self._first_name = first_name
        self._last_name = last_name
        self._other_name = other_name
        self._email = email
        self._phone = phone
        self._birthday = birthday
        self._city = city
        self._additional_info = additional_info
        self._is_admin = is_admin

    @classmethod
    def from_dict(cls, dikt) -> 'PrivateUpdateUserModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PrivateUpdateUserModel of this PrivateUpdateUserModel.  # noqa: E501
        :rtype: PrivateUpdateUserModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this PrivateUpdateUserModel.


        :return: The id of this PrivateUpdateUserModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this PrivateUpdateUserModel.


        :param id: The id of this PrivateUpdateUserModel.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def first_name(self) -> str:
        """Gets the first_name of this PrivateUpdateUserModel.


        :return: The first_name of this PrivateUpdateUserModel.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this PrivateUpdateUserModel.


        :param first_name: The first_name of this PrivateUpdateUserModel.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this PrivateUpdateUserModel.


        :return: The last_name of this PrivateUpdateUserModel.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this PrivateUpdateUserModel.


        :param last_name: The last_name of this PrivateUpdateUserModel.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def other_name(self) -> str:
        """Gets the other_name of this PrivateUpdateUserModel.


        :return: The other_name of this PrivateUpdateUserModel.
        :rtype: str
        """
        return self._other_name

    @other_name.setter
    def other_name(self, other_name: str):
        """Sets the other_name of this PrivateUpdateUserModel.


        :param other_name: The other_name of this PrivateUpdateUserModel.
        :type other_name: str
        """

        self._other_name = other_name

    @property
    def email(self) -> str:
        """Gets the email of this PrivateUpdateUserModel.


        :return: The email of this PrivateUpdateUserModel.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this PrivateUpdateUserModel.


        :param email: The email of this PrivateUpdateUserModel.
        :type email: str
        """

        self._email = email

    @property
    def phone(self) -> str:
        """Gets the phone of this PrivateUpdateUserModel.


        :return: The phone of this PrivateUpdateUserModel.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this PrivateUpdateUserModel.


        :param phone: The phone of this PrivateUpdateUserModel.
        :type phone: str
        """

        self._phone = phone

    @property
    def birthday(self) -> date:
        """Gets the birthday of this PrivateUpdateUserModel.


        :return: The birthday of this PrivateUpdateUserModel.
        :rtype: date
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday: date):
        """Sets the birthday of this PrivateUpdateUserModel.


        :param birthday: The birthday of this PrivateUpdateUserModel.
        :type birthday: date
        """

        self._birthday = birthday

    @property
    def city(self) -> int:
        """Gets the city of this PrivateUpdateUserModel.


        :return: The city of this PrivateUpdateUserModel.
        :rtype: int
        """
        return self._city

    @city.setter
    def city(self, city: int):
        """Sets the city of this PrivateUpdateUserModel.


        :param city: The city of this PrivateUpdateUserModel.
        :type city: int
        """

        self._city = city

    @property
    def additional_info(self) -> str:
        """Gets the additional_info of this PrivateUpdateUserModel.


        :return: The additional_info of this PrivateUpdateUserModel.
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info: str):
        """Sets the additional_info of this PrivateUpdateUserModel.


        :param additional_info: The additional_info of this PrivateUpdateUserModel.
        :type additional_info: str
        """

        self._additional_info = additional_info

    @property
    def is_admin(self) -> bool:
        """Gets the is_admin of this PrivateUpdateUserModel.


        :return: The is_admin of this PrivateUpdateUserModel.
        :rtype: bool
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin: bool):
        """Sets the is_admin of this PrivateUpdateUserModel.


        :param is_admin: The is_admin of this PrivateUpdateUserModel.
        :type is_admin: bool
        """

        self._is_admin = is_admin
